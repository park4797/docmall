<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.test.mapper.AdProductMapper">
  
  	<insert id="pro_insert" parameterType="com.test.domain.ProductVO">
  		INSERT INTO
  			PRODUCT_TBL(PRO_NUM, CG_CODE, PRO_NAME, PRO_PRICE, PRO_DISCOUNT, PRO_PUBLISHER, PRO_CONTENT, PRO_UP_FOLDER, PRO_IMG, PRO_AMOUNT, PRO_BUY)
  		VALUES
  			(SEQ_PRODUCT_TBL.nextval, #{cg_code}, #{pro_name}, #{pro_price}, #{pro_discount}, #{pro_publisher}, #{pro_content}, #{pro_up_folder}, #{pro_img}, #{pro_amount}, #{pro_buy})
  	</insert>
  
  	<!-- 공통된 sql 구문작업시 사용 : 검색조건 작업 -->
 	<sql id="criteria">
 	<!-- prefixOverrides : 실행될 쿼리의 <trim> 문 안에 쿼리 가장 앞에 해당하는 문자들이 있으면 자동으로 지워준다 -->
 		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
 			<foreach collection="typeArr" item="type"><!-- getType() 동작 -->
 				<trim prefix="OR">
 					<choose>
		 				<when test="type == 'N'.toString()">
		 					PRO_NAME like '%' || #{keyword} || '%'
		 				</when>
		 				<when test="type == 'C'.toString()">
		 					PRO_NUM like '%' || #{keyword} || '%'
		 				</when>
		 				<when test="type == 'P'.toString()">
		 					PRO_PUBLISHER like '%' || #{keyword} || '%'
		 				</when>
 					</choose>
 				</trim>
 			</foreach>
 		</trim>
 	</sql>
 	
 	<!-- CDATA section -->
 	<select id="pro_list" resultType="com.test.domain.ProductVO" parameterType="com.test.dto.Criteria">
		<![CDATA[
		SELECT
			PRO_NUM, CG_CODE, PRO_NAME, PRO_PRICE, PRO_DISCOUNT, PRO_PUBLISHER, PRO_CONTENT, PRO_UP_FOLDER, PRO_IMG, PRO_AMOUNT, PRO_BUY, PRO_DATE, PRO_UPDATEDATE
		FROM (
		      SELECT /*+INDEX_DESC(PRODUCT_TBL PK_PRO_NUM) */
		      	rownum rn, PRO_NUM, CG_CODE, PRO_NAME, PRO_PRICE, PRO_DISCOUNT, PRO_PUBLISHER, PRO_CONTENT, PRO_UP_FOLDER, PRO_IMG, PRO_AMOUNT, PRO_BUY, PRO_DATE, PRO_UPDATEDATE
		      FROM 
		      	PRODUCT_TBL
		      WHERE
		      ]]>
		      <!-- refid : reference id -->
		      <include refid="criteria"></include>
		      
		      <![CDATA[
		      rownum <= #{pageNum} * #{amount}
			 )
		WHERE rn > (#{pageNum} -1) * #{amount}
		]]>
 	</select>
    
 	<select id="getTotalCount" resultType="int">
 		select count(*) from PRODUCT_TBL where
 		
 		<!-- 검색에 대한 정보가 들어온다 -->
 		<include refid="criteria"></include>
 		
 		<!-- 검색을 사용하지 않으면  -->
 		PRO_NUM > 0
 	</select>
 	
 	<!-- 체크상품 수정 1 -->
 	<update id="pro_checked_modify1" parameterType="Map">
		UPDATE
			PRODUCT_TBL
		SET
			PRO_PRICE = #{pro_price},
			PRO_BUY = #{pro_buy}
		WHERE
			PRO_NUM = #{pro_num}	
 	</update>
 	
 	<!-- 체크상품 수정 2 -->
 	<update id="pro_checked_modify2" parameterType="com.test.dto.ProductDTO">
 		
 		<!-- item이 ProductDTO를 가리킨다 -->
 		<!-- 
 		1) declare begin : open, 처음 한 번만 동작
 		2) update문이 생성된다(list의 갯수만큼). seperator가 ;을 붙여준다
 		3) separator : ; , 마지막에는 진행되지 않는다.
 		4) close : ; end;, 마지막 한 번만 동작 separator의 특징으로 인해 ;를 붙이고 시작
 		 -->
 		<foreach collection="list" item="item" open="declare begin" separator=";" close="; end;">
	 		UPDATE
				PRODUCT_TBL
			SET
				PRO_PRICE = #{item.pro_price},
				PRO_BUY = #{item.pro_buy}
			WHERE
				PRO_NUM = #{item.pro_num}	
 		</foreach>
 	</update>
 	
 	<select id="pro_edit" resultType="com.test.domain.ProductVO">
 		SELECT
 			PRO_NUM, CG_CODE, PRO_NAME, PRO_PRICE, PRO_DISCOUNT, PRO_PUBLISHER, PRO_CONTENT, PRO_UP_FOLDER, PRO_IMG, PRO_AMOUNT, PRO_BUY, PRO_DATE, PRO_UPDATEDATE
		FROM
			PRODUCT_TBL
		WHERE
			PRO_NUM = #{pro_num}
 	</select>
 	
 	<!-- 상품수정 -->
 	<update id="pro_edit_ok" parameterType="com.test.domain.ProductVO">
 		UPDATE
 			PRODUCT_TBL
 		SET
 			CG_CODE = #{cg_code},
 			PRO_NAME = #{pro_name},
 			PRO_PRICE = #{pro_price},
 			PRO_DISCOUNT = #{pro_discount},
 			PRO_PUBLISHER = #{pro_publisher},
 			PRO_CONTENT = #{pro_content},
 			PRO_UP_FOLDER = #{pro_up_folder},
 			PRO_IMG = #{pro_img},
 			PRO_AMOUNT = #{pro_amount},
 			PRO_BUY = #{pro_buy},
 			PRO_UPDATEDATE = SYSDATE
		WHERE
			PRO_NUM = #{pro_num}
 	</update>
 	
 	<delete id="pro_delete" parameterType="Integer">
 		DELETE FROM
 			PRODUCT_TBL
		WHERE
			PRO_NUM = #{pro_num}
 	</delete>
 	
  </mapper>